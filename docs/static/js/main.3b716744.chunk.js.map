{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GiftGridItem.js","components/giftGrid.js","hooks/useFetchGifts.js","GiftExpertApp.js","index.js"],"names":["AddCategory","categories","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","query","encodeURI","end_point","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GiftGridItem","url","className","src","alt","GiftGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifts","GiftExpertApp","ReactDOM","render","document","getElementById"],"mappings":"qNAuCeA,EAnCK,SAAC,GAAkC,EAAhCC,WAAiC,IAArBC,EAAoB,EAApBA,cAAoB,EACfC,mBAAS,IADM,mBAC5CC,EAD4C,KAChCC,EADgC,KAenD,OACI,mCACI,sBAAMC,SAVO,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAG,OAAGP,GAAH,mBAAiBO,OAClCN,EAAc,MAMd,SACA,uBAEIO,KAAM,OACNC,MAAOT,EACPU,SAnBa,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,e,+BCahBG,EArBF,uCAAG,WAAOC,GAAP,yBAAAC,EAAA,2FAEK,mCACXC,EAAQC,UAAUH,GACZ,GACNI,EALM,oEAEK,mCAFL,cAKgDF,EALhD,kBAIA,IAJA,SAOOG,MAAMD,GAPb,cAONE,EAPM,iBAQSA,EAAKC,OARd,wBAQLC,EARK,EAQLA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVF,IAAIA,EAAIG,OAAOC,qBAdX,kBAkBLN,GAlBK,4CAAH,sDCaEO,EAVM,SAAC,GAAsB,IAArBL,EAAoB,EAApBA,IAAKC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,MACpBI,EAAQN,EAARM,IACR,OACI,sBAAKC,UAAU,0CAAf,UACI,qBAAMC,IAAKF,EAAKG,IAAKP,IACrB,4BAAIA,MAFsDD,ICmBvDS,EArBE,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EAENd,mBAAS,CAC/BsB,KAAM,GACNc,SAAS,IAJmB,mBAEzBC,EAFyB,KAElBC,EAFkB,KAqBhC,OAdAC,qBAAU,WACN1B,EAAQC,GAAU0B,MAAK,SAAAC,GAEnBH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAOlB,CAACtB,IAEGuB,EDlByBK,CAAc5B,GAAjCc,EAFgB,EAErBN,KAAYc,EAFS,EAETA,QAEpB,OAEI,qCACI,oBAAIJ,UAAU,sCAAd,SAAsDlB,IACpDsB,EAAS,WAAa,GACxB,qBAAKJ,UAAU,UAAf,SACCJ,EAAOJ,KAAI,SAAAC,GACZ,OAAO,cAAC,EAAD,eAECA,GADCA,EAAIC,aEkBViB,EA5BO,WAAK,MAEa3C,mBAAS,CAAC,KAFvB,mBAEhBF,EAFgB,KAEJC,EAFI,KAQvB,OACI,qCACA,iDACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEID,EAAW0B,KAAI,SAAAhB,GAAG,OACd,cAAC,EAAD,CAEIM,SAAUN,GADLA,YCnBzBoC,IAASC,OAAO,cAAC,EAAD,IACdC,SAASC,eAAe,U","file":"static/js/main.3b716744.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './AddCategory.css'\r\nconst AddCategory = ( {categories, setCategories} ) => {\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n\r\n    const handleInputValue = (e)=>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>0){\r\n            setCategories(cat=>[inputValue,...cat])\r\n            setInputValue('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit= {handleSubmit}>\r\n            <input \r\n\r\n                type =\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputValue}\r\n                \r\n            />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories:PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default AddCategory;","const getGifs = async (category) =>{\r\n    const API_URL  = `api.giphy.com/v1/gifs/search`\r\n    const api_key  = 'yPjOb6dQt00AfmeD73bIhKkGwDMkGoJw'\r\n    const query = encodeURI(category);\r\n    const limit=10\r\n    const end_point = `http://${API_URL}?api_key=${api_key}&q=${query}&limit=${limit}`\r\n    \r\n    const resp = await fetch(end_point)\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img=>{\r\n        return{\r\n            id:img.id,\r\n            title:img.title,\r\n            img:img.images.downsized_medium\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}\r\n\r\nexport default getGifs;","import React from 'react'\r\n\r\n\r\nconst GiftGridItem = ({img, id, title}) => {\r\n    const { url } = img;\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn \" key={id}>\r\n            <img  src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GiftGridItem;","import React /*,{ useEffect,useState }*/ from 'react'\r\nimport {useFetchGifts} from '../hooks/useFetchGifts';\r\nimport GiftGridItem from './GiftGridItem';\r\n\r\nconst GiftGrid = ({category}) => {\r\n\r\n    const { data:images,loading } = useFetchGifts(category);\r\n    \r\n    return (\r\n        \r\n        <>\r\n            <h3 className=\" animate__animated animate__fadeIn \" >{category}</h3>\r\n            { loading? 'Cargando' : '' }\r\n            <div className='img-gal'>\r\n            {images.map(img=>{\r\n            return <GiftGridItem \r\n                key={img.id} \r\n                {...img}\r\n            />})}\r\n            </div>   \r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default GiftGrid;","import { useState, useEffect } from 'react';\r\nimport getGifs from '../helpers/getGifs';\r\n\r\nconst useFetchGifts = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then(imgs => {\r\n\r\n            setstate({\r\n                data: imgs,\r\n                loading: false\r\n            })\r\n\r\n\r\n        }\r\n\r\n        )\r\n    }, [category])\r\n\r\n    return state;\r\n}\r\n\r\nexport { useFetchGifts };","import React, {useState} from 'react';\r\nimport AddCategory from './components/AddCategory'\r\nimport GiftGrid from './components/giftGrid'\r\n\r\nimport './index.css';\r\n\r\nconst GiftExpertApp = () =>{\r\n    //const categories = ['Hunter x Hunter','DBZ', 'Lamb Of God']\r\n    const [categories, setCategories] = useState([''])\r\n\r\n    // const handleAdd = () =>{\r\n    //     setCategories([...categories, 'Samurai X'])\r\n    // }\r\n\r\n    return(\r\n        <>\r\n        <h2>Gift Expert App</h2>\r\n        <AddCategory setCategories ={setCategories}  />\r\n        <hr/>\r\n        {/* <button onClick={ handleAdd } id=\"txt-addCat\">Agregar</button> */}\r\n        <ol>\r\n            {\r\n            categories.map(cat=>(\r\n                <GiftGrid \r\n                    key={cat} \r\n                    category={cat}\r\n                />\r\n            ))\r\n            }\r\n        </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GiftExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GiftExpertApp  from './GiftExpertApp';\n\nReactDOM.render(<GiftExpertApp/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}